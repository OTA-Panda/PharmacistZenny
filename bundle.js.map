{"version":3,"sources":["webpack/bootstrap","./src/assets/pill.js","./src/testing.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,4BAA4B;AAC9D,kCAAkC,4BAA4B;AAC9D,KAAK;AACL,kCAAkC,4BAA4B;AAC9D,kCAAkC,4BAA4B;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mE;;;;;;;;;;;;ACjOf;AAAA;AAAgC;;;AAGhC;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA,kBAAkB,oDAAI,WAAW,2BAA2B;AAC5D,kBAAkB,oDAAI,WAAW,2BAA2B;AAC5D,kBAAkB,oDAAI,WAAW,2BAA2B;;AAE5D;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,uC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/testing.js\");\n","class Pill {\n  constructor (context, position, colors, space) {\n    this.context = context\n    this.position = position\n    this.space = space\n    this.connected = true\n    const positionA = position\n    const positionB = { x: position.x + space, y: position.y }\n    this.colorA = colors[Math.random() * colors.length | 0]\n    this.colorB = colors[Math.random() * colors.length | 0]\n    this.pillA = new PillHalf(context, positionA, \"left\", this.colorA, space)\n    this.pillB = new PillHalf(context, positionB, \"right\", this.colorB, space)\n  }\n\n  draw() {\n    this.pillA.draw()\n    this.pillB.draw()\n  }\n\n  move(direction) {\n    let [xa, ya] = [this.pillA.getPillPosition().x, this.pillA.getPillPosition().y]\n    let [xb, yb] = [this.pillB.getPillPosition().x, this.pillB.getPillPosition().y]\n    if (direction > 0) {\n      this.pillA.setPillPosition({ x: xa + this.space, y: ya })\n      this.pillB.setPillPosition({ x: xb + this.space, y: yb })\n    } else {\n      this.pillA.setPillPosition({ x: xa - this.space, y: ya })\n      this.pillB.setPillPosition({ x: xb - this.space, y: yb })\n    }\n  }\n\n  rotate(direction) {\n    if (direction > 0) {\n      switch (this.pillA.getPillOrientation()) {\n        case \"left\":                    //[0, 0]\n        this.pillA.setPillPosition({    //[A, B]\n          x: this.position.x, y: this.position.y - this.space\n        }).setPillOrientation(\"up\")     //[A, 0]\n        this.pillB.setPillPosition({    //[B, 0]\n          x: this.position.x, y: this.position.y\n        }).setPillOrientation(\"down\")\n        break\n        case \"up\":                      //[A, 0]\n        this.pillA.setPillPosition({    //[B, 0]\n          x: this.position.x + this.space, y: this.position.y\n        }).setPillOrientation(\"right\")  //[0, 0]\n        this.pillB.setPillPosition({    //[B, A]\n          x: this.position.x, y: this.position.y\n        }).setPillOrientation(\"left\")\n        break\n        case \"right\":                   //[0, 0]\n        this.pillA.setPillPosition({    //[B, A]\n          x: this.position.x, y: this.position.y\n        }).setPillOrientation(\"down\")   //[B, 0]\n        this.pillB.setPillPosition({    //[A, 0]\n          x: this.position.x, y: this.position.y - this.space\n        }).setPillOrientation(\"up\")\n        break\n        case \"down\":                    //[B, 0]\n        this.pillA.setPillPosition({    //[A, 0]\n          x: this.position.x, y: this.position.y\n        }).setPillOrientation(\"left\")   //[0, 0]\n        this.pillB.setPillPosition({    //[A, B]\n          x: this.position.x + this.space, y: this.position.y\n        }).setPillOrientation(\"right\")\n        break\n      }\n    } else {\n      switch (this.pillA.getPillOrientation()) {\n        case \"left\":                    //[0, 0]\n        this.pillA.setPillPosition({    //[A, B]\n          x: this.position.x, y: this.position.y\n        }).setPillOrientation(\"down\")   //[B, 0]\n        this.pillB.setPillPosition({    //[A, 0]\n          x: this.position.x, y: this.position.y - this.space\n        }).setPillOrientation(\"up\")\n        break\n        case \"down\":                    //[B, 0]\n        this.pillA.setPillPosition({    //[A, 0]\n          x: this.position.x + this.space, y: this.position.y\n        }).setPillOrientation(\"right\")  //[0, 0]\n        this.pillB.setPillPosition({    //[B, A]\n          x: this.position.x, y: this.position.y\n        }).setPillOrientation(\"left\")\n        break\n        case \"right\":                   //[0, 0]\n        this.pillA.setPillPosition({    //[B, A]\n          x: this.position.x, y: this.position.y - this.space\n        }).setPillOrientation(\"up\")     //[A, 0]\n        this.pillB.setPillPosition({    //[B, 0]\n          x: this.position.x, y: this.position.y\n        }).setPillOrientation(\"down\")\n        break\n        case \"up\":                      //[A, 0]\n        this.pillA.setPillPosition({    //[B, 0]\n          x: this.position.x, y: this.position.y\n        }).setPillOrientation(\"left\")   //[0, 0]\n        this.pillB.setPillPosition({    //[A, B]\n          x: this.position.x + this.space, y: this.position.y\n        }).setPillOrientation(\"right\")\n        break\n      }\n    }\n  }\n}\n\n\nclass PillHalf {\n  constructor (context, position, orientation, color, space) {\n    this.context = context\n    this.position = position\n    this.orientation = orientation\n    this.color = color\n    this.attached = true\n    this.space = space\n  }\n\n  getPillAngle(orientation) {\n    switch (orientation) {\n      case \"up\": return -90\n      case \"down\": return 90\n      case \"left\": return 180\n      case \"right\": return 0\n    }\n  }\n\n  getPillOrientation() {\n    return this.orientation\n  }\n  \n  setPillOrientation(orientation) {\n    this.orientation = orientation\n    return this\n  }\n\n  getPillPosition() {\n    return this.position\n  }\n\n  setPillPosition(position) {\n    this.position = position\n    return this\n  }\n\n  draw() {\n    let x = this.position.x\n    let y = this.position.y\n    let space = this.space\n    let degrees = this.getPillAngle(this.orientation)\n    let curvature = .225  //affects corners of capsule\n    const lineWidth = this.space / 20\n    const offset = lineWidth / 2\n    this.context.fillStyle = this.color;\n    this.context.lineWidth = lineWidth;\n    this.context.strokeStyle = 'black';\n\n    this.context.save()\n      //rotate\n      this.context.translate(x + space / 2, y + space / 2)\n        this.context.rotate(Math.PI / 180 * degrees) // rotates clockwise\n      this.context.translate(-x - space / 2, -y - space / 2)\n      //render\n      this.context.beginPath();\n      this.context.moveTo(x, y + offset); // top left origin\n      this.context.lineTo(x + space / 2, y + offset);\n      this.context.bezierCurveTo(\n        x + space * (1 - curvature),\n        y + offset,  \n        x + space - offset,\n        y + offset + space * curvature,\n        x + space - offset,\n        y + space / 2\n      )\n      this.context.bezierCurveTo(\n        x + space - offset,\n        y + space - offset - space * curvature,\n        x + space * (1 - curvature),\n        y + space - offset,\n        x + space / 2,\n        y + space - offset\n      )\n      this.context.lineTo(x, y + space - offset)\n      this.context.closePath();\n      this.context.fill();\n      this.context.stroke();\n    this.context.restore()\n  }\n}\n\nclass PillPart {\n  constructor(context, position, color, space) {\n    this.context = context\n    this.position = position\n    this.color = color\n    this.space = space\n  }\n\n  setPillPosition(position) {\n    this.position = position\n  }\n\n  draw(){\n    let x = this.position.x\n    let y = this.position.y\n    let space = this.space\n    const lineWidth = this.space / 20\n    const offset = lineWidth / 2\n    this.context.fillStyle = this.color;\n    this.context.lineWidth = lineWidth;\n    this.context.strokeStyle = 'black';\n    \n    this.context.beginPath();\n    this.context.arc(\n      x + space / 2,\n      y + space / 2,\n      space / 2 - offset,\n      0,\n      Math.PI * 2\n    )\n    this.context.closePath();\n    this.context.fill();\n    this.context.stroke();\n  }\n}\n\nexport default Pill","import Pill from './assets/pill'\n\n\nconst canvas = document.getElementById('zenny')\nconst context = canvas.getContext('2d')\n\nconst scaleUp = 5\nconst size = 10\ncontext.scale(scaleUp, scaleUp)\n\nconst colors = ['red','yellow','deepskyblue'] //temp\n\n\nconst pill1 = new Pill(context, { x: 1 * size, y: 2 * size }, colors, size)\nconst pill2 = new Pill(context, { x: 0 * size, y: 6 * size }, colors, size)\nconst pill3 = new Pill(context, { x: 0 * size, y: 8 * size }, colors, size)\n\npill1.draw()\npill2.draw()\npill3.draw()\n\n\nsetTimeout(() => {\n  pill1.rotate(1)\n  pill1.draw()\n  setTimeout(() => {\n    pill1.move(1)\n    pill1.draw()\n    setTimeout(() => {\n      pill1.rotate(-1)\n      pill1.draw()\n      setTimeout(() => {\n        pill1.move(-1)\n        pill1.draw()\n      }, 1000)\n    }, 2000)\n  }, 1000)\n}, 1000)\n// pill1.rotate(1)\n// setTimeout(() => pill1.draw(), 2000)\n// pill1.rotate(1)\n// setTimeout(() => pill1.draw(), 1000)\n// pill1.rotate(1)\n// setTimeout(() => pill1.draw(), 1000)"],"sourceRoot":""}